							CONDIZIONI E LOOP
CONDIZIONI:
-IF statement
ci sono molte forme di condizioni. la prima, chiamata if può essere usata per comparare 2 o più variabili.
Il sorgente if-else.c viene utilizzato per spiegare cosa accade in assembly.
Aprire il programma con radare2 : 
r2 ./code_sample
Eseguire queste istruzioni :
- aaaa (per analizzare funzioni e creare referenze mirate al processo di rev eng)
- afl (All function list) : permette di listare tutte le funzioni del binario
- s main (seek) : usato per settare l'indirizzo corrente nel binario alla funzione main (in questo caso è da dove dobbiamo partire), se si nota l'indirizzo di default a cui punta radare
è entry0 niente meno che l'entry point del binario.
- pdf (print disassemble function) : permette di analizzare le istruzioni che compongono il main in questo caso.
Ora possiamo osservare che le variabili hanno un nome diverso da x e y, si chiamano dword[local...], una delle due viene passata nel registro eax e poi viene eseuita l'istruzione cmp tra le 2.
L'istruzione jne (jump not equal) fa sì che se non sono uguali si jumpa all'istruzione di return altrimenti le 2 variabili vengono pushate nello stack (salvate) e viene chiamato il metodo printf.
Più nel dettaglio l'istruzione cmp (compare) compara i 2 valori, se sono uguali ritorna 0 (il zero flag, se cmp ritorna 0, viene settato a 1, altrimenti rimane a 0)
Dopodichè se viene eseguito il jump l'instruction pointer viene settato all'indirizzo dove bisogna jumpare, altrimenti viene settato all'istruzione successiva.

-Else statement
Viene interpretato nel codice come l'altro ramo, in questo caso semplicemente si jumpa con l'opcode jne del codice

Nel caso ci fossero opeatori logici per esempio &&, ||, !=, == la struttura rimane identica, vengono solo aggiunte più operazioni, ma il concetto
rimane identico.

LOOPS:
sono usati per ripetere uno specifico perzzo di codice senza il bisogno di scriverlo più volte.
Si potrebbe usare un loop per iterare attraverso una lista quando la grandezza è sconosciuta. 
Leggendo il sorgente loop.c notiamo che viene utilizzato un loop per printare una stringa 15 volte.
Disassemblandolo con radare2 notiamo che viene utilizzata l'operazione jump per tornare all'inizio del loop se il compare con la variabile risulta minore-uguale di 14 (0xe)
nel frattempo ogni volta che esegue il jump viene chiamata printf, che è proprio quello che fa il sorgente in c.
Le istruzioni per disassemblare il binario sono sempre le medesime :
- aaaa
- afl
- s main
- pdf



